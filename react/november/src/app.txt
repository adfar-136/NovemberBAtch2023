import React from 'react'
import Header from "./components/Header"
import Contact from './components/Contact'
var fName = "Adfar Rasheed"
function App() {
  return (
    <div>
      <h1>my name is {fName}</h1>
      <Header/>
      <Contact/>
      <Contact/>
    </div>
  )
}


export default App


//themechanger
import React, { useState } from 'react'

export default function ThemeChange() {
    // const [color,setColor] = useState("white");
    // const [text,setText] = useState("DARK");
    const [condition,setCondition] = useState(true)
    function handleColor(){
        setCondition(!condition)
        // if(condition===true){
        //     setCondition(false)
        // } else{
        //     setCondition(true)
        // }
    //    if(color === "white"){
    //     setColor("black")
    //     setText("LIGHT")
    //    } else{
    //     setColor("white")
    //     setText("DARK")
    //    }
    }
  return (
    <div style={{width:"100vw",backgroundColor:condition?"white":"black",height:"70vh",border:"2px solid red"}}>
      <button onClick={handleColor}>{condition ? "DARK" : "LIGHT"}</button>

    </div>
  )
}


//conditional rendering 
import React, { useState } from 'react'
import Condiotion from './components/Condiotion';

export default function App() {
  const [count,setCount] = useState(0);
  const allow =true;
  function handleIncrement(){
    setCount(count + 1);
  }
  return (
    <div>
      <h1>{count}</h1>
      {allow?<h1>True hain</h1>:<h1>False hain</h1>}
      {!allow? <Condiotion/>:""}
      {allow && <h1>Newton school</h1>}
      <button onClick={handleIncrement}>Add one</button>
    </div>
  )
}

//state depending on previous stateimport React, { useState } from 'react'

export default function App() {
  const [count,setCount] =useState(0)
  function handleIncrement(){
    // setCount(count+1);
    // setCount(count+1);
    // setCount(count+1);
    // setCount(count+1);
    // setCount((prev)=>prev+1)
    // setCount((prev)=>prev+1)
    // setCount((prev)=>prev+1)
    // setCount((prev)=>prev+1)
    setCount(count+1)
    setCount((prev)=>prev+1)
    setCount(count+1)
  }
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={handleIncrement}>Add one</button>
    </div>
  )
}

//List rendering

import React, { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  function handleIncrement(){
    setCount(count+1);
  }
  var data = ["HTML","CSS","JS","React","HTML","CSS","JS","React"]
  return (
    <div>
      <ul>
        {data.map((item,index)=>{
          return <li key={index}>{item}</li>
        })}
      </ul>
      <h1>Hello World!</h1>
      <h1>{count}</h1>
      <button onClick={handleIncrement}>increment</button>
    </div>
  )
}


//props
import React from 'react'

export default function App() {
  var fName = "Adfarrrr"
  return (
    <div>
      <h1 >App Parent</h1>
      <Children firstName={fName} salary="Rs4000" skill = {[1,2,3,4]} age = {34}/>
      {/* <Children firstName="Ankit" salary="Rs2000" age={44} /> */}
    </div>
  )
}
function Children(props){
  console.log("props: " ,props)
  return (
    <div>
      {props.skill.map((item,index)=>{
        return <h1 key={index}>{item}</h1>
      })}
      <h1>Children </h1>
      {/* <p>My First Name is {props.firstName}, my age is {props.age}, and my salary is {props.salary}</p> */}
      <Grandchildren fName={props.firstName} sal={props.salary} umar={props.age}/>
    </div>
  )
}
function Grandchildren(props){
  console.log("p",props)
  return (
    <div>
      <mark>{props.fName} {props.sal} {props.umar}</mark>
      <h1>Grand Children</h1>
    </div>
  )
}

//Children
import React from 'react'

export default function Component({children}) {
  return (
    <div>
        {children}
        <h1>Hello component</h1>
        {children}
        
    </div>
  )
}


//conditional rendering
import React, { useState } from 'react'
import "./App.css"
export default function App() {
  const [allow,setAllow] = useState(false)
  const [clas,setClas] = useState("main") 
 
  return (
    <>
     {!allow? <Comp1/>:<Comp2/>}
     {/* {allow && (
      <Comp1/>
     )} */}
     <button onClick={()=>setAllow(!allow)}>Show</button>
     <div className={clas}>
      <h1>hello</h1>
      <button onClick={()=>setClas("container")}>container</button>
      <button onClick={()=>setClas("main")}>main</button>
     </div>
    </>
  )
}
function Comp1(){
  return (
    <>
     <h1>Component1</h1>
    </>
  )
}
function Comp2(){
  return (
    <>
     <h1>Component2</h1></>
  )
}

/controlled component 
import React, { useState } from 'react'

export default function App() {
  const [firstName,setFirstName] = useState("");
  const [allow,setAllow] = useState(false)
  const [email,setEmail]= useState("")
  console.log(firstName)
  function handleSubmit(e){
    e.preventDefault()
     setAllow(true)
  }
  return (
    <div>
      <h1>React Controlled Forms</h1>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder='enter Name'
        value={firstName} 
        onChange={(e)=>setFirstName(e.target.value)}/><br /><br />
        <input type="email" placeholder='enter Email'
        value={email}/> <br /> <br />
         
        <input type="submit" value="Submit" />
        <button onClick={()=>setFirstName("hello")}>hello</button>
      </form>
      {allow && <h1>hello {firstName}</h1>}
    </div>
  )
}


//Forms
import React, { useState } from 'react'

export default function App() {
  const [allow,setAllow] = useState(false)
  const [input,setInput] = useState({
    name: '',
    age:'',
    email: '',
  })
  function handleSubmit(e){
     e.preventDefault()
     setAllow(true)
  }
  return (
    <div>
      <h1>State Management</h1>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder='name' 
        value={input.name} 
        onChange={(e)=>setInput((prev)=>({...prev,name:e.target.value}))}
        />
        <br />
        <input type="text" placeholder='age' 
         value={input.age} 
         onChange={(e)=>setInput((prev)=>({...prev,age:e.target.value}))}
        /><br />
        <input type="text" placeholder='email' 
         value={input.email}
         onChange={(e)=>setInput((prev)=>({...prev,email:e.target.value}))}
        /><br />
        <input type="submit" value="Login" />
      </form>
      {allow ? (
        <>
         <h1>{input.name}</h1>
         <h1>{input.age}</h1>
         <h1>{input.email}</h1>
        </>
      ):""}
    </div>
  )
}


//useEffect 
import React, { useEffect, useState } from 'react'

export default function App() {
  
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(100)
  const [number1,setNumber1] = useState(1000)
  useEffect(()=>{
    console.log("useEffect")
    // const fun =()=>{
    //   console.log("adfar")
    // }
    // document.addEventListener("click",fun)
    // return ()=>{
    //   document.removeEventListener("click",fun)
    // }
   let interval =  setInterval(()=>{
    console.log("Adfar")
  },3000)
  return ()=>{
    clearInterval(interval)
  }
  })
  return (
    <div>
       <h1>count: {count}</h1>
       <button onClick={()=>setCount(count+1)}>Increment</button>
       <h1>Number: {number}</h1>
       <button onClick={()=>setNumber(number-1)}>Decrement</button>
       <h1>Number1: {number1}</h1>
       <button onClick={()=>setNumber1(number1+10)}>Decrement</button>
    </div>
  )
}


//useEffect 
import React, { useEffect, useState } from 'react'
import Item1 from './components/Item1'

export default function App() {
  const [condition,setCoondition] = useState(true)
  const [number,setNumber] = useState(100)
  const [count,setCount] = useState(0)
  useEffect(()=>{
    const interval = setInterval(()=>{
      setCount(count+1)
    },1000)
    return ()=>{
      clearInterval(interval)
    }
  },[count])
  return (
    <div>
      <button onClick={()=>setCoondition(!condition)}>Click</button>
      <h1>Adfar Rasheed</h1>
      <h1>Count: {count}</h1>
      <button onClick={()=>setCount(count+1)}>ADD</button>
      <h1>number: {number}</h1>
      <button onClick={()=>setNumber(number+10)}>Change Number</button>
      {condition && <Item1/>}
    </div>
  )
}
//useEffect(()=>{
  //  console.log("Adfar")
})

//ai fetching using .then .catch 

import React, { useState } from 'react'

export default function App() {
  const [joke,setJoke]=useState({})
  function handleJoke(){
   var data= fetch('https://api.chucknorris.io/jokes/random')
   console.log(data)
   data.then((result)=>{
    return result.json()
   }).then((res)=>{
    setJoke(res)
   }).catch((err)=>{
     console.log(err)
   })
  }
  return (
    <div>
       <h1>{joke.value}</h1>
       <img src={joke.icon_url} alt="" />
      <button onClick={handleJoke}>generateJoke</button>
    </div>
  )
}


//pokemon app.js code 
import React, { useEffect, useState } from 'react'
import "./App.css"
import PokeThumbnail from './PokeThumbnail'
export default function App() {
  const [allPokemons,setAllPokemons] = useState([])
  const [loadMore,setLoadMore] = useState({})
  useEffect(()=>{
     getAllPokemons()
  },[])
  const getAllPokemons =async()=>{
    const res =await fetch("https://content.newtonschool.co/v1/pr/64ccef982071a9ad01d36ff6/pokemonspages1")
    const data =await res.json()
    
    setLoadMore(data[0].next)
    
    function createPokeMonObject(result){
      result.forEach(async (pokemon)=>{
           const res =await fetch(pokemon.url);
           const dataa =await res.json();
           setAllPokemons(prev=>([...prev, dataa]))
           
      })
    }
    createPokeMonObject(data[0].results)
 
  }
  async function getMoreData(){
    const res =await fetch(loadMore);
    const data =await res.json();
    setLoadMore(data[0].next)
    
    function createPokeMonObject(result){
      result.forEach(async (pokemon)=>{
         
           const res =await fetch(pokemon.url);
           const dataa =await res.json();
           setAllPokemons(prev=>([...prev, dataa]))
           
      })
    }
    createPokeMonObject(data[0].results)
    
  }
  return (
    <div id='parent'>
      <div id='section'>
        <div className="content">
            <h2>Pokemon</h2>
            <h2>Pokemon</h2>
        </div>
        <div className="content2">
            <h2>Kingdom</h2>
            <h2>Kingdom</h2>
        </div>
      </div>
      <div className="app-container">
        <div className="pokemon-container">
            <div className="all-container">
              {allPokemons.map((pokemon,index)=>{
                console.log(pokemon)
                return  <PokeThumbnail
             
                key={index}
                id={pokemon[0].id}
                name={pokemon[0].name}
                image={pokemon[0].image}
                type={pokemon[0].type}
                height={pokemon[0].height}
                weight={pokemon[0].weight}
                stat1={pokemon[0].stats[0].stat.name}
                stat2={pokemon[0].stats[1].stat.name}
                stat3={pokemon[0].stats[2].stat.name}
                stat4={pokemon[0].stats[3].stat.name}
                stat5={pokemon[0].stats[4].stat.name}
                stat6={pokemon[0].stats[5].stat.name}
                bs1={pokemon[0].stats[0].base_stat}
                bs2={pokemon[0].stats[1].base_stat}
                bs3={pokemon[0].stats[2].base_stat}
                bs4={pokemon[0].stats[3].base_stat}
                bs5={pokemon[0].stats[4].base_stat}
                bs6={pokemon[0].stats[5].base_stat}
                />
              }
             )}
            </div>
            <button className='load-more' onClick={()=>getMoreData()}>More Pokemons</button>
        </div>
      </div>

    </div>
  )
}
